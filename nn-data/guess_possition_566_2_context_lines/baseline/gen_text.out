1
===================
try { file_icon = file_system_view.get_file_system_view ( ).get_system_icon ( file ) ; } catch ( exception e ) { <LOG> <comment> try { file_icon = new j_file_chooser ( ).get_icon ( file ) ; } catch ( exception e1 ) 



false: [0.82311]
true: [0.80973]
<unk>: [-2.20708]
2
===================
<comment> private static final random random = new random ( ) ; static { string prefer6 = system.get_property ( <string_literal> ) ; string prefer4 = system.get_property ( <string_literal> ) ; <LOG> logger.info ( <string_literal> + prefer4 ) ; } <comment> 



false: [0.80624]
true: [0.7942]
<unk>: [-2.16676]
3
===================
if ( ! use_dns_cache ) { lookup.set_cache ( new cache ( ) ) ; } records = lookup.run ( ) ; } catch ( text_parse_exception tpe ) { <LOG> throw new parse_exception ( tpe.get_message ( ) , 0 ) ; } catch ( dnssec_runtime_exception e ) { throw new dnssec_exception ( e ) ; } if ( records == null ) { 



false: [0.82165]
true: [0.8086]
<unk>: [-2.20394]
4
===================
try { lookup lookup = create_lookup ( domain , type.naptr ) ; records = lookup.run ( ) ; } catch ( text_parse_exception tpe ) { <LOG> throw new parse_exception ( tpe.get_message ( ) , 0 ) ; } catch ( dnssec_runtime_exception e ) { throw new dnssec_exception ( e ) ; } if ( records == null ) 



false: [0.82078]
true: [0.80749]
<unk>: [-2.20108]
5
===================
while ( keep_accepting ) { socket instance_socket = lock_socket.accept ( ) ; new lock_server_connection_processor ( instance_socket ).start ( ) ; } } catch ( exception exc ) { <LOG> } } } <comment> private static class lock_server_connection_processor extends thread { 



false: [0.82252]
true: [0.80913]
<unk>: [-2.20512]
6
===================
catch ( io_exception exc ) { <comment> <LOG> } <comment> 



false: [0.62538]
true: [0.6184]
<unk>: [-1.72188]
7
===================
<comment> private void handle_uri ( string uri ) { <LOG> arg_delegator.handle_uri ( uri ) ; } <comment> 



false: [0.67338]
true: [0.66137]
<unk>: [-1.84701]
8
===================
if ( name == null || name.trim ( ).length ( ) == 0 ) { name = <string_literal> ; } if ( version == null || version.trim ( ).length ( ) == 0 ) { version = <string_literal> ; } <LOG> } <comment> 



false: [0.80647]
true: [0.79469]
<unk>: [-2.16731]
9
===================
<comment> public void stop ( bundle_context bundle_context ) throws exception { <LOG> if ( m_update_executor != null ) { m_update_executor.shutdown ( ) ; m_update_executor = null ; } } <comment> 



false: [0.69028]
true: [0.67647]
<unk>: [-1.88923]
10
===================
{ service_listener.service_changed ( new service_event ( service_event.registered , service_reference ) ) ; } } <LOG> } <comment> 



false: [0.68044]
true: [0.66813]
<unk>: [-1.8651]
11
===================
if ( hresult < 0 ) throw new runtime_exception ( <string_literal> + hresult ) ; } finally { messenger.stop ( bundle_context ) ; } <LOG> } <comment> 



false: [0.6787]
true: [0.66605]
<unk>: [-1.85942]
12
===================
server_comments = xml_utils.new_document_builder_factory ( ).new_document_builder ( ).parse ( resources.get_property_input_stream ( <string_literal> ) ) ; } catch ( sax_exception e ) { <LOG> } catch ( parser_configuration_exception e ) { logger.error ( <string_literal> , e ) ; } catch ( io_exception e ) { logger.error ( <string_literal> , e ) ; 



false: [0.82275]
true: [0.80926]
<unk>: [-2.20581]
13
===================
color c = color.get_color ( <string_literal> , color ) ; w_shape = new whiteboard_shape_line ( id , t , c , p_start , p_end ) ; } else if ( wbo instanceof whiteboard_object_rect ) { whiteboard_object_rect rect = ( whiteboard_object_rect ) wbo ; <LOG> color c = color.get_color ( <string_literal> , color ) ; double height , width ; whiteboard_point p = rect.get_whiteboard_point ( ) ; width = rect.get_width ( ) ; height = rect.get_height ( ) ; boolean fill = rect.is_fill ( ) ; 



false: [0.81698]
true: [0.80392]
<unk>: [-2.19182]
14
===================
boolean fill = circle.is_fill ( ) ; w_shape = new whiteboard_shape_circle ( id , t , c , p , r , fill ) ; } else if ( wbo instanceof whiteboard_object_text ) { whiteboard_object_text text = ( whiteboard_object_text ) wbo ; <LOG> color c = color.get_color ( <string_literal> , color ) ; whiteboard_point p = text.get_whiteboard_point ( ) ; int size = text.get_font_size ( ) ; string txt = text.get_text ( ) ; w_shape = new whiteboard_shape_text ( id , c , p , size , txt ) ; } else if ( wbo instanceof whiteboard_object_image ) 



false: [0.81822]
true: [0.80473]
<unk>: [-2.19625]
15
===================
{ public void whiteboard_participant_added ( whiteboard_participant_event evt ) { } public void whiteboard_participant_removed ( whiteboard_participant_event evt ) { <LOG> whiteboard_activator.get_ui_service ( ).get_popup_dialog ( ).show_message_popup_dialog ( contact.get_address ( ) + <string_literal> ) ; } public void whiteboard_state_changed ( whiteboard_change_event evt ) { } } } 



false: [0.82677]
true: [0.81415]
<unk>: [-2.2183]
16
===================
= contact.get_protocol_provider ( ).get_operation_set ( operation_set_whiteboarding.class ) ; if ( op_set_wb == null ) { <LOG> return ; } whiteboard_frame wbf = get_whiteboard_frame ( contact ) ; if ( wbf != null ) { wbf.set_visible ( true ) ; return ; 



false: [0.82009]
true: [0.80681]
<unk>: [-2.1992]
17
===================
+ <string_literal> + task.delay + <string_literal> ) ; timer.schedule ( task , task.delay ) ; } return ; } pp.unregister ( ) ; } catch ( throwable t ) { <LOG> } } } ).start ( ) ; } <comment> private void trace_current_pp_state ( ) 



false: [0.82294]
true: [0.80896]
<unk>: [-2.20775]
18
===================
{ logger.trace ( <string_literal> + connected_interfaces ) ; logger.trace ( <string_literal> + auto_reconn_enabled_providers.key_set ( ) ) ; logger.trace ( <string_literal> + currently_reconnecting.key_set ( ) ) ; <LOG> logger.trace ( <string_literal> + unregistering_providers ) ; logger.trace ( <string_literal> ) ; } <comment> 



false: [0.82384]
true: [0.81139]
<unk>: [-2.2108]
19
===================
logger.trace ( <string_literal> + auto_reconn_enabled_providers.key_set ( ) ) ; logger.trace ( <string_literal> + currently_reconnecting.key_set ( ) ) ; logger.trace ( <string_literal> + needs_reconnection ) ; logger.trace ( <string_literal> + unregistering_providers ) ; <LOG> } <comment> 



false: [0.82035]
true: [0.80824]
<unk>: [-2.20133]
20
===================
&& currently_reconnecting.contains_key ( pp ) ) { currently_reconnecting.remove ( pp ).cancel ( ) ; } unregistering_providers.remove ( pp ) ; { <LOG> if ( ! currently_reconnecting.contains_key ( pp ) && ! needs_reconnection.contains ( pp ) { <comment> 



false: [0.82013]
true: [0.80731]
<unk>: [-2.20044]
21
===================
{ <comment> <LOG> entry.set_sound_file ( file_uri ) ; sound_file_text_field.set_text ( file_uri ) ; } catch ( malformed_url_exception ex ) { logger.error ( <string_literal> , ex ) ; } } else 



false: [0.81429]
true: [0.80267]
<unk>: [-2.18816]
22
===================
catch ( malformed_url_exception ex ) { logger.error ( <string_literal> , ex ) ; } } else { <LOG> } } else if ( e.get_source ( ) == program_file_button ) { if ( row < 0 ) return ; notification_entry entry = notification_list.get_notification_entry ( row ) ; 



false: [0.82133]
true: [0.80783]
<unk>: [-2.20349]
23
===================
entry.set_program_file ( file.get_absolute_path ( ) ) ; program_file_text_field.set_text ( file.get_absolute_path ( ) ) ; } else { <LOG> } } else if ( e.get_source ( ) == play_sound_button ) { string sound_file = sound_file_text_field.get_text ( ) ; logger.debug ( <string_literal> + sound_file + <string_literal> + sound_file.length ( ) ) ; if ( sound_file.length ( ) != 0 ) 



false: [0.81954]
true: [0.80658]
<unk>: [-2.19898]
24
===================
sc_audio_clip sound = audio_notif_serv.create_audio ( sound_file ) ; sound.play ( ) ; <comment> <LOG> } } } <comment> public void insert_update ( document_event event ) { 



false: [0.69035]
true: [0.6759]
<unk>: [-1.88921]
25
===================
<comment> <LOG> return null ; } } <comment> 



false: [0.56746]
true: [0.56421]
<unk>: [-1.56312]
26
===================
reload_configuration ( ) ; } catch ( exception e ) { logger.error ( <string_literal> ) ; } } catch ( io_exception e ) { <LOG> } finally { try { in.close ( ) ; } catch ( io_exception e ) 



false: [0.81456]
true: [0.80148]
<unk>: [-2.18719]
27
===================
system.set_property ( sys_key , ( string ) value ) ; } else { provisioning_activator.get_configuration_service ( ).set_property ( key , value ) ; } <LOG> } <comment> 



false: [0.68809]
true: [0.67508]
<unk>: [-1.88385]
28
===================
. bundle_context.install_bundle ( jar.to_uri ( ).to_url ( ).to_string ( ) ) ; selector.select_no_skin ( ) ; new_bundle.start ( ) ; } catch ( malformed_url_exception ex ) { <LOG> } } } catch ( bundle_exception ex ) { logger.info ( <string_literal> , ex ) ; skin_manager_activator.get_ui_service ( ).get_popup_dialog ( ).show_message_popup_dialog ( ex.get_message ( ) , <string_literal> , popup_dialog.error_message ) ; 



false: [0.82427]
true: [0.81096]
<unk>: [-2.21097]
29
===================
<comment> protected void catch_exception ( throwable exception ) { <LOG> } <comment> protected abstract object construct ( ) throws exception ; <comment> 



false: [0.66778]
true: [0.65564]
<unk>: [-1.83081]
30
===================
signup_link ) ; try { swing_utilities.invoke_and_wait ( creator ) ; } catch ( interrupted_exception e ) { <LOG> } catch ( invocation_target_exception e ) { logger.error ( <string_literal> , e ) ; } return creator.authentication_window ; } } , null ) ; 



false: [0.82059]
true: [0.80745]
<unk>: [-2.20092]
1
===================
<comment> try { file_icon = new j_file_chooser ( ).get_icon ( file ) ; } catch ( exception e1 ) <LOG> { } } return file_icon ; } } 



false: [0.68571]
true: [0.67232]
<unk>: [-1.877]
2
===================
<comment> private static final random random = new random ( ) ; static { string prefer6 = system.get_property ( <string_literal> ) ; string prefer4 = system.get_property ( <string_literal> ) ; <LOG> logger.info ( <string_literal> + prefer6 ) ; } <comment> 



false: [0.80624]
true: [0.7942]
<unk>: [-2.16676]
3
===================
org.xbill.dns.srv_record srv_record = ( org.xbill.dns.srv_record ) records [ i ] ; srv_records [ i ] = new srv_record ( srv_record ) ; } <comment> <LOG> { for ( int i = 0 ; i < srv_records.length ; i ++ ) { logger.trace ( srv_records [ i ] ) ; } } return srv_records ; 



false: [0.8124]
true: [0.79964]
<unk>: [-2.17921]
4
===================
catch ( io_exception exc ) { logger.warn ( <string_literal> , exc ) ; return ; } <LOG> array_list < string > args_list = new array_list < string > ( ) ; int arg_count = <number_literal> ; try { buffered_reader line_reader = new buffered_reader ( new input_stream_reader ( is ) ) ; 



false: [0.81975]
true: [0.80639]
<unk>: [-2.20047]
5
===================
<comment> public int handle_args ( string [ ] args ) { int return_action = action_continue ; for ( int i = 0 ; i < args.length ; i ++ ) <LOG> { if ( args [ i ].equals ( <string_literal> ) || args [ i ].equals ( <string_literal> ) ) { handle_version_arg ( ) ; <comment> 



false: [0.81826]
true: [0.80515]
<unk>: [-2.19711]
6
===================
if ( config_arg.starts_with ( <string_literal> ) ) { config_arg = config_arg.substring ( <string_literal>.length ( ) ) ; } file config_dir = new file ( config_arg ) ; config_dir.mkdirs ( ) ; if ( ! config_dir.is_directory ( ) ) <LOG> { error_code = error_code_create_dir_failed ; return action_error ; } system.set_property ( pname_sc_home_dir_location , config_dir.get_parent ( ) ) ; system.set_property ( pname_sc_cache_dir_location , config_dir.get_parent ( ) ) ; system.set_property ( pname_sc_log_dir_location , config_dir.get_parent ( ) ) ; 



false: [0.82626]
true: [0.81257]
<unk>: [-2.21658]
7
===================
<comment> static int get_status ( messenger_contact messenger_contact ) { string signin_name = messenger_contact.signin_name ; <LOG> protocol_presence_status presence_status ; if ( signin_name == null ) presence_status = null ; else { self self = get_self ( signin_name ) ; 



false: [0.81777]
true: [0.80424]
<unk>: [-2.19363]
8
===================
public void start ( bundle_context bundle_context ) throws exception { <comment> <LOG> return ; ms_office_comm_activator.bundle_context = bundle_context ; messenger.start ( bundle_context ) ; boolean stop_messenger = true ; try 



false: [0.80847]
true: [0.79593]
<unk>: [-2.17096]
9
===================
try { west_icon_label.set_icon ( new image_icon ( image_io.read ( new byte_array_input_stream ( resources.get_image ( resources.page_image ) ) ) ) ) ; } catch ( io_exception e ) <LOG> { } this.west_panel.add ( west_icon_label , border_layout.north ) ; this.main_panel.add ( west_panel , border_layout.west ) ; <comment> 



false: [0.81653]
true: [0.80351]
<unk>: [-2.19034]
10
===================
height = rect.get_height ( ) ; boolean fill = rect.is_fill ( ) ; w_shape = new whiteboard_shape_rect ( id , t , c , p , width , height , fill ) ; } else if ( wbo instanceof whiteboard_object_circle ) { <LOG> whiteboard_object_circle circle = ( whiteboard_object_circle ) wbo ; color c = color.get_color ( <string_literal> , color ) ; whiteboard_point p = circle.get_whiteboard_point ( ) ; double r = circle.get_radius ( ) ; boolean fill = circle.is_fill ( ) ; w_shape = new whiteboard_shape_circle ( id , t , c , p , r , fill ) ; 



false: [0.80607]
true: [0.79395]
<unk>: [-2.16303]
11
===================
int size = text.get_font_size ( ) ; string txt = text.get_text ( ) ; w_shape = new whiteboard_shape_text ( id , c , p , size , txt ) ; } else if ( wbo instanceof whiteboard_object_image ) { <LOG> whiteboard_object_image img = ( whiteboard_object_image ) wbo ; double height , width ; whiteboard_point p = img.get_whiteboard_point ( ) ; width = img.get_width ( ) ; height = img.get_height ( ) ; byte [ ] b = img.get_background_image ( ) ; 



false: [0.81943]
true: [0.80602]
<unk>: [-2.19888]
12
===================
@ override protected plugin_component get_plugin_instance ( ) { return new whiteboard_menu_item ( session , this ) ; } } , <LOG> container_filter ) ; } <comment> 



false: [0.68338]
true: [0.66984]
<unk>: [-1.8717]
13
===================
} ).start ( ) ; } <comment> private void trace_current_pp_state ( ) <LOG> { logger.trace ( <string_literal> + auto_reconn_enabled_providers.key_set ( ) ) ; logger.trace ( <string_literal> + currently_reconnecting.key_set ( ) ) ; logger.trace ( <string_literal> + needs_reconnection ) ; 



false: [0.82201]
true: [0.80922]
<unk>: [-2.20483]
14
===================
{ logger.trace ( <string_literal> + connected_interfaces ) ; logger.trace ( <string_literal> + auto_reconn_enabled_providers.key_set ( ) ) ; logger.trace ( <string_literal> + currently_reconnecting.key_set ( ) ) ; <LOG> logger.trace ( <string_literal> + needs_reconnection ) ; logger.trace ( <string_literal> ) ; } <comment> 



false: [0.82291]
true: [0.81059]
<unk>: [-2.20853]
15
===================
pp , new array_list < string > ( connected_interfaces ) ) ; if ( currently_reconnecting.contains_key ( pp ) ) currently_reconnecting.remove ( pp ).cancel ( ) ; unregistering_providers.remove ( pp ) ; <LOG> { trace_current_pp_state ( ) ; } } else if ( evt.get_new_state ( ).equals ( registration_state.unregistered ) || is_server_returned_erroneous_input_event ) { <comment> 



false: [0.82453]
true: [0.81137]
<unk>: [-2.21211]
16
===================
<comment> <LOG> { } } else { logger.debug ( <string_literal> ) ; } } else if ( e.get_source ( ) == program_file_button ) 



false: [0.68279]
true: [0.66858]
<unk>: [-1.86901]
17
===================
file file = program_file_chooser.get_file_from_dialog ( ) ; if ( file != null ) { <comment> <LOG> <comment> 



false: [0.67622]
true: [0.66405]
<unk>: [-1.8545]
18
===================
{ logger.debug ( <string_literal> ) ; } } else if ( e.get_source ( ) == play_sound_button ) { <LOG> string sound_file = sound_file_text_field.get_text ( ) ; if ( sound_file.length ( ) != 0 ) { audio_notifier_service audio_notif_serv = notification_configuration_activator.get_audio_notifier_service ( ) ; 



false: [0.8244]
true: [0.81072]
<unk>: [-2.2113]
19
===================
<comment> provisioning_activator.get_configuration_service ( ).store_configuration ( ) ; provisioning_activator.get_configuration_service ( ).reload_configuration ( ) ; } catch ( exception e ) <LOG> { } } catch ( io_exception e ) { logger.warn ( <string_literal> ) ; } finally { 



false: [0.82496]
true: [0.81208]
<unk>: [-2.21249]
20
===================
else if ( key.ends_with ( <string_literal> ) ) { <comment> provisioning_activator.get_credentials_storage_service ( ).store_password ( key.substring ( 0 , key.last_index_of ( <string_literal> ) ) , <LOG> ( string ) value ) ; return ; } else if ( key.starts_with ( system_prop_prefix ) ) { string sys_key = key.substring ( system_prop_prefix.length ( ) , key.length ( ) ) ; 



false: [0.82102]
true: [0.80798]
<unk>: [-2.20334]
21
===================
file jar = null ; try { jar = resources.get_resources ( ).prepare_skin_bundle_from_zip ( new_bundle_file ) ; } catch ( exception ex ) <LOG> { skin_manager_activator.get_ui_service ( ).get_popup_dialog ( ).show_message_popup_dialog ( ex.get_class ( ) + <string_literal> + ex.get_message ( ) , <string_literal> , popup_dialog.error_message ) ; } if ( jar != null ) 



false: [0.823]
true: [0.80993]
<unk>: [-2.20809]
22
===================
dialog = new master_password_input_dialog ( ) ; dialog.rebuild_main_panel ( ! prev_success ) ; dialog.reset_password ( ) ; <comment> <LOG> { } return dialog.password ; } <comment> 



false: [0.68427]
true: [0.67103]
<unk>: [-1.87289]
23
===================
{ swing_utilities.invoke_and_wait ( creator ) ; } catch ( interrupted_exception e ) { logger.error ( <string_literal> , e ) ; } catch ( invocation_target_exception e ) <LOG> { } return creator.authentication_window ; } } , null ) ; } <comment> 



false: [0.82122]
true: [0.8083]
<unk>: [-2.20317]
24
===================
verify_certificate_dialog_creator creator = new verify_certificate_dialog_creator ( certs , title , message ) ; try { swing_utilities.invoke_and_wait ( creator ) ; } catch ( interrupted_exception e ) <LOG> { } catch ( invocation_target_exception e ) { logger.error ( <string_literal> , e ) ; } return creator.dialog ; } <comment> 



false: [0.81744]
true: [0.80494]
<unk>: [-2.19241]
25
===================
<string_literal> + <string_literal> + <string_literal> + <string_literal> + listener , <LOG> throwable ) ; } } <comment> 



false: [0.64915]
true: [0.63997]
<unk>: [-1.78462]
26
===================
string stored_account = stored_account_iter.next ( ) ; <comment> <LOG> continue ; list < string > stored_account_properties = config_service.get_property_names_by_prefix ( stored_account , false ) ; map < string , string > account_properties = new hashtable < string , string > ( ) ; boolean disabled = false ; 



false: [0.80933]
true: [0.79691]
<unk>: [-2.17187]
27
===================
bundle_context , credentials_storage_service.class ) ; credentials_storage.remove_password ( factory_package + <string_literal> + account_node_name ) ; } if ( configuration_properties.size ( ) > 0 ) <LOG> configuration_service.set_properties ( configuration_properties ) ; + <string_literal> + factory_package ) ; } <comment> 



false: [0.82032]
true: [0.80744]
<unk>: [-2.20086]
28
===================
= forget_presence_status ( pps ) ; if ( ( presence_status != null ) && on_the_phone_presence_status.equals ( presence.get_presence_status ( ) ) ) { <LOG> { } publish_presence_status ( presence , presence_status ) ; } } } else { { 



false: [0.82622]
true: [0.81422]
<unk>: [-2.21689]
29
===================
<comment> public void service_changed ( service_event ev ) { <LOG> { } single_call_in_progress_policy.this.service_changed ( ev ) ; } } } 



false: [0.68801]
true: [0.67461]
<unk>: [-1.88398]
30
===================
return ; collection < file_transfer_status_listener > listeners = null ; synchronized ( status_listeners ) { listeners <LOG> = new array_list < file_transfer_status_listener > ( status_listeners ) ; } + <string_literal> + status ) ; file_transfer_status_change_event status_event = new file_transfer_status_change_event ( this , status , new_status , reason ) ; <comment> 



false: [0.8168]
true: [0.80416]
<unk>: [-2.19125]
